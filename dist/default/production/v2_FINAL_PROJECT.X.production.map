Microchip MPLAB XC8 Compiler V1.35 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.35\dat\en_msgs.txt -cs \
  -h+dist/default/production\v2_FINAL_PROJECT.X.production.sym \
  --cmf=dist/default/production\v2_FINAL_PROJECT.X.production.cmf -z \
  -Q18F4331 -oC:\Users\hwc115\AppData\Local\Temp\s944.2 \
  -Mdist/default/production/v2_FINAL_PROJECT.X.production.map -E1 -ver=XC8 \
  -ASTACK=01E5h-02ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\hwc115\AppData\Local\Temp\s944.obj \
  dist/default/production\v2_FINAL_PROJECT.X.production.obj 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\hwc115\AppData\Local\Temp\s944.obj
                end_init                             E2       E2        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\v2_FINAL_PROJECT.X.production.obj
                intcode                               8        8       DA        4       0
                temp                                 39       39        1        1       1
                smallconst                          300      300       14      180       0
                text27                             10E2     10E2        8      18A       0
                text26                             10D4     10D4        E      18A       0
                text25                              CA2      CA2       78      18A       0
                text24                             101C     101C       28      18A       0
                text23                              FEC      FEC       30      18A       0
                text21                             10C6     10C6        E      18A       0
                text20                              A8E      A8E       9C      18A       0
                text19                              FBC      FBC       30      18A       0
                text18                             108A     108A       20      18A       0
                text17                              8E8      8E8       E8      18A       0
                text16                              F88      F88       34      18A       0
                text15                              F18      F18       3A      18A       0
                text14                              9D0      9D0       BE      18A       0
                text13                              F52      F52       36      18A       0
                text12                              5C4      5C4      1D4      18A       0
                text11                              EC2      EC2       56      18A       0
                text10                              BAA      BAA       80      18A       0
                text9                               B2A      B2A       80      18A       0
                text8                              106A     106A       20      18A       0
                text7                               DF6      DF6       6A      18A       0
                text6                              10AA     10AA       1C      18A       0
                text5                               C2A      C2A       78      18A       0
                text4                               E60      E60       62      18A       0
                text3                               798      798      150      18A       0
                text2                               D88      D88       6E      18A       0
                text1                               D1A      D1A       6E      18A       0
                text0                               314      314      2B0      18A       0
                cstackCOMRAM                          1        1       26        1       1
                cstackBANK0                          60       60       21       60       1
                cstackBANK1                         100      100       D4      100       1
                bssBANK1                            1D4      1D4       11      100       1
                bssCOMRAM                            27       27       12        1       1
                cinit                              1044     1044       26      18A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             E2       E2        4         0
                intcode                               8        8       DA         0
                reset_vec                             0        0        4         0
                text27                             10E2     10E2        8         0
                text26                             10D4     10D4        E         0
                text25                              CA2      CA2       78         0
                text24                             101C     101C       28         0
                text23                              FEC      FEC       30         0
                text21                             10C6     10C6        E         0
                text20                              A8E      A8E       9C         0
                text19                              FBC      FBC       30         0
                text18                             108A     108A       20         0
                text17                              8E8      8E8       E8         0
                text16                              F88      F88       34         0
                text15                              F18      F18       3A         0
                text14                              9D0      9D0       BE         0
                text13                              F52      F52       36         0
                text12                              5C4      5C4      1D4         0
                text11                              EC2      EC2       56         0
                text10                              BAA      BAA       80         0
                text9                               B2A      B2A       80         0
                text8                              106A     106A       20         0
                text7                               DF6      DF6       6A         0
                text6                              10AA     10AA       1C         0
                text5                               C2A      C2A       78         0
                text4                               E60      E60       62         0
                text3                               798      798      150         0
                text2                               D88      D88       6E         0
                text1                               D1A      D1A       6E         0
                text0                               314      314      2B0         0
                cinit                              1044     1044       26         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       14         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 39       39        1         1
                cstackCOMRAM                          1        1       26         1
                bssCOMRAM                            27       27       12         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       21         1

        CLASS   BANK1          
                cstackBANK1                         100      100       D4         1
                bssBANK1                            1D4      1D4       11         1

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000039  00003A         1       1  COMRAM  
                intcode                        000008  0000DE  0000E6         4       0  CODE    
                cstackBANK0                    000060  000021  000081        60       1  BANK0   
                cstackBANK1                    000100  0000E5  0001E5       100       1  BANK1   
                smallconst                     000300  000014  000314       180       0  SMALLCON
                text0                          000314  000DD6  0010EA       18A       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000081-0000FF               7F
        BANK1            0001E5-0001FF               1B
        BANK2            000200-0002FF              100
        BIGRAM           00003A-00005F               26
                         000081-0000FF               7F
                         0001E5-0002FF              11B
        CODE             000004-000007                4
                         0000E6-0002FF              21A
                         0010EA-001FFF              F16
        COMRAM           00003A-00005F               26
        CONST            000004-000007                4
                         0000E6-0002FF              21A
                         0010EA-001FFF              F16
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0010EA-001FFF              F16
        RAM              000081-0000FF               7F
                         0001E5-0002FF               1B
        SFR              000F60-000FFF               A0
        SMALLCONST       0010EA-001FFF              100
        STACK            0001E5-0002FF              11B

                                  Symbol Table

?___awdiv                      cstackBANK0  000066
?___lwdiv                      cstackBANK0  000060
?___lwmod                      cstackBANK0  000067
?___wmul                       cstackBANK0  000060
?_sprintf                      cstackBANK0  00006C
InterruptHandlerHigh@RFIDa     cstackCOMRAM 000024
InterruptHandlerHigh@buf       cstackCOMRAM 000016
InterruptHandlerHigh@counter   cstackCOMRAM 000026
InterruptHandlerHigh@num       cstackCOMRAM 000022
LCD_String@string              cstackBANK0  000064
LCDout@number                  cstackBANK0  000061
SendLCD@Byte                   cstackBANK0  000063
SendLCD@type                   cstackBANK0  000062
SetLine@line                   cstackBANK0  000064
_ANSEL0                        (abs)        000FB8
_ANSEL1                        (abs)        000FB9
_BAUDCONbits                   (abs)        000FAA
_CAP1BUFH                      (abs)        000F69
_CAP1BUFL                      (abs)        000F68
_CAP1CON                       (abs)        000F63
_E_TOG                         text21       0010C6
_INTCONbits                    (abs)        000FF2
_InterruptHandlerHigh          intcode      000008
_LATA                          (abs)        000F89
_LATAbits                      (abs)        000F89
_LATB                          (abs)        000F8A
_LATC                          (abs)        000F8B
_LATCbits                      (abs)        000F8B
_LATD                          (abs)        000F8C
_LATDbits                      (abs)        000F8C
_LCD_Clear                     text18       00108A
_LCD_Init                      text17       0008E8
_LCD_String                    text16       000F88
_LCDout                        text20       000A8E
_OSCCON                        (abs)        000FD3
_OSCCONbits                    (abs)        000FD3
_PDC0H                         (abs)        000F78
_PDC0L                         (abs)        000F79
_PDC1H                         (abs)        000F76
_PDC1L                         (abs)        000F77
_PIE1bits                      (abs)        000F9D
_PIR1bits                      (abs)        000F9E
_PTCON0                        (abs)        000F7F
_PTCON1                        (abs)        000F7E
_PTPERH                        (abs)        000F7A
_PTPERL                        (abs)        000F7B
_PWMCON0                       (abs)        000F6F
_PWMCON1                       (abs)        000F6E
_RCONbits                      (abs)        000FD0
_RCREG                         (abs)        000FAE
_RCSTAbits                     (abs)        000FAB
_SPBRG                         (abs)        000FAF
_SPBRGH                        (abs)        000FB0
_SendLCD                       text19       000FBC
_SetLine                       text15       000F18
_T5CONbits                     (abs)        000FB7
_TRISA                         (abs)        000F92
_TRISAbits                     (abs)        000F92
_TRISB                         (abs)        000F93
_TRISBbits                     (abs)        000F93
_TRISC                         (abs)        000F94
_TRISD                         (abs)        000F95
_TXSTAbits                     (abs)        000FAC
__CFG_OSC$IRCIO                (abs)        000000
__HRAM                         (abs)        000000
__Habs1                        abs1         000000
__Hbank0                       bank0        000000
__Hbank1                       bank1        000000
__Hbank2                       bank2        000000
__Hbigbss                      bigbss       000000
__Hbigdata                     bigdata      000000
__Hbigram                      bigram       000000
__Hbss                         bss          000000
__HbssBANK1                    bssBANK1     000000
__HbssCOMRAM                   bssCOMRAM    000000
__Hcinit                       cinit        000000
__Hclrtext                     clrtext      000000
__Hcomram                      comram       000000
__Hconfig                      config       30000E
__Hconst                       const        000000
__HcstackBANK0                 cstackBANK0  000000
__HcstackBANK1                 cstackBANK1  000000
__HcstackCOMRAM                cstackCOMRAM 000000
__Hdata                        data         000000
__Heeprom_data                 eeprom_data  000000
__Hend_init                    end_init     0000E6
__Hfarbss                      farbss       000000
__Hfardata                     fardata      000000
__Hibigdata                    ibigdata     000000
__Hidata                       idata        000000
__Hidloc                       idloc        200008
__Hifardata                    ifardata     000000
__Hinit                        init         0000E2
__Hintcode                     intcode      0000E2
__Hintcode_body                intcode_body 000000
__Hintcodelo                   intcodelo    0000E2
__Hintentry                    intentry     000000
__Hintret                      intret       000000
__Hintsave_regs                intsave_regs 000000
__Hirdata                      irdata       000000
__Hmediumconst                 mediumconst  000000
__HnvFARRAM                    nvFARRAM     000000
__Hnvbit                       nvbit        000000
__Hnvrram                      nvrram       000000
__Hparam                       rparam       000000
__Hpowerup                     powerup      0000E2
__Hram                         ram          000000
__Hramtop                      ramtop       000300
__Hrbit                        rbit         000000
__Hrbss                        rbss         000000
__Hrdata                       rdata        000000
__Hreset_vec                   reset_vec    000004
__Hrparam                      rparam       000000
__Hsfr                         sfr          000000
__Hsmallconst                  smallconst   000314
__Hspace_0                     (abs)        30000E
__Hspace_1                     (abs)        0001E5
__Hspace_2                     (abs)        000000
__Hstack                       stack        000000
__Hstruct                      struct       000000
__Htemp                        temp         00003A
__Htext                        text         000000
__Htext0                       text0        000000
__Htext1                       text1        000000
__Htext10                      text10       000000
__Htext11                      text11       000000
__Htext12                      text12       000000
__Htext13                      text13       000000
__Htext14                      text14       000000
__Htext15                      text15       000000
__Htext16                      text16       000000
__Htext17                      text17       000000
__Htext18                      text18       000000
__Htext19                      text19       000000
__Htext2                       text2        000000
__Htext20                      text20       000000
__Htext21                      text21       000000
__Htext23                      text23       000000
__Htext24                      text24       000000
__Htext25                      text25       000000
__Htext26                      text26       000000
__Htext27                      text27       000000
__Htext3                       text3        000000
__Htext4                       text4        000000
__Htext5                       text5        000000
__Htext6                       text6        000000
__Htext7                       text7        000000
__Htext8                       text8        000000
__Htext9                       text9        000000
__LRAM                         (abs)        000001
__Labs1                        abs1         000000
__Lbank0                       bank0        000000
__Lbank1                       bank1        000000
__Lbank2                       bank2        000000
__Lbigbss                      bigbss       000000
__Lbigdata                     bigdata      000000
__Lbigram                      bigram       000000
__Lbss                         bss          000000
__LbssBANK1                    bssBANK1     000000
__LbssCOMRAM                   bssCOMRAM    000000
__Lcinit                       cinit        000000
__Lclrtext                     clrtext      000000
__Lcomram                      comram       000000
__Lconfig                      config       300000
__Lconst                       const        000000
__LcstackBANK0                 cstackBANK0  000000
__LcstackBANK1                 cstackBANK1  000000
__LcstackCOMRAM                cstackCOMRAM 000000
__Ldata                        data         000000
__Leeprom_data                 eeprom_data  000000
__Lend_init                    end_init     0000E2
__Lfarbss                      farbss       000000
__Lfardata                     fardata      000000
__Libigdata                    ibigdata     000000
__Lidata                       idata        000000
__Lidloc                       idloc        200000
__Lifardata                    ifardata     000000
__Linit                        init         0000E2
__Lintcode                     intcode      000008
__Lintcode_body                intcode_body 000000
__Lintcodelo                   intcodelo    0000E2
__Lintentry                    intentry     000000
__Lintret                      intret       000000
__Lintsave_regs                intsave_regs 000000
__Lirdata                      irdata       000000
__Lmediumconst                 mediumconst  000000
__LnvFARRAM                    nvFARRAM     000000
__Lnvbit                       nvbit        000000
__Lnvrram                      nvrram       000000
__Lparam                       rparam       000000
__Lpowerup                     powerup      0000E2
__Lram                         ram          000000
__Lramtop                      ramtop       000300
__Lrbit                        rbit         000000
__Lrbss                        rbss         000000
__Lrdata                       rdata        000000
__Lreset_vec                   reset_vec    000000
__Lrparam                      rparam       000000
__Lsfr                         sfr          000000
__Lsmallconst                  smallconst   000300
__Lspace_0                     (abs)        000000
__Lspace_1                     (abs)        000000
__Lspace_2                     (abs)        000000
__Lstack                       stack        000000
__Lstruct                      struct       000000
__Ltemp                        temp         000039
__Ltext                        text         000000
__Ltext0                       text0        000000
__Ltext1                       text1        000000
__Ltext10                      text10       000000
__Ltext11                      text11       000000
__Ltext12                      text12       000000
__Ltext13                      text13       000000
__Ltext14                      text14       000000
__Ltext15                      text15       000000
__Ltext16                      text16       000000
__Ltext17                      text17       000000
__Ltext18                      text18       000000
__Ltext19                      text19       000000
__Ltext2                       text2        000000
__Ltext20                      text20       000000
__Ltext21                      text21       000000
__Ltext23                      text23       000000
__Ltext24                      text24       000000
__Ltext25                      text25       000000
__Ltext26                      text26       000000
__Ltext27                      text27       000000
__Ltext3                       text3        000000
__Ltext4                       text4        000000
__Ltext5                       text5        000000
__Ltext6                       text6        000000
__Ltext7                       text7        000000
__Ltext8                       text8        000000
__Ltext9                       text9        000000
__S0                           (abs)        30000E
__S1                           (abs)        0001E5
__S2                           (abs)        000000
___awdiv                       text14       0009D0
___awdiv@counter               cstackBANK0  00006A
___awdiv@dividend              cstackBANK0  000066
___awdiv@divisor               cstackBANK0  000068
___awdiv@quotient              cstackBANK0  00006C
___awdiv@sign                  cstackBANK0  00006B
___inthi_sp                    stack        000000
___intlo_sp                    stack        000000
___lwdiv                       text5        000C2A
___lwdiv@counter               cstackBANK0  000064
___lwdiv@dividend              cstackBANK0  000060
___lwdiv@divisor               cstackBANK0  000062
___lwdiv@quotient              cstackBANK0  000065
___lwmod                       text4        000E60
___lwmod@counter               cstackBANK0  00006B
___lwmod@dividend              cstackBANK0  000067
___lwmod@divisor               cstackBANK0  000069
___param_bank                  (abs)        000010
___rparam_used                 (abs)        000001
___sp                          stack        000000
___wmul                        text13       000F52
___wmul@multiplicand           cstackBANK0  000062
___wmul@multiplier             cstackBANK0  000060
___wmul@product                cstackBANK0  000064
__accesstop                    (abs)        000060
__activetblptr                 (abs)        000002
__end_of_E_TOG                 text21       0010D4
__end_of_InterruptHandlerHigh  intcode      0000E2
__end_of_LCD_Clear             text18       0010AA
__end_of_LCD_Init              text17       0009D0
__end_of_LCD_String            text16       000FBC
__end_of_LCDout                text20       000B2A
__end_of_SendLCD               text19       000FEC
__end_of_SetLine               text15       000F52
__end_of___awdiv               text14       000A8E
__end_of___lwdiv               text5        000CA2
__end_of___lwmod               text4        000EC2
__end_of___wmul                text13       000F88
__end_of__initialization       cinit        00105C
__end_of_dpowers               smallconst   00030B
__end_of_fullSpeedAhead        text10       000C2A
__end_of_fullSpeedBack         text9        000BAA
__end_of_getCharSerial         text27       0010EA
__end_of_initBITS              text8        00108A
__end_of_initMotor             text7        000E60
__end_of_initPWM               text6        0010C6
__end_of_main                  text0        0005C4
__end_of_setMotorPWM           text12       000798
__end_of_sprintf               text3        0008E8
__end_of_stop                  text11       000F18
__end_of_turnLeft              text2        000DF6
__end_of_turnRight             text1        000D88
__end_ofi2_E_TOG               text26       0010E2
__end_ofi2_LCD_String          text23       00101C
__end_ofi2_LCDout              text25       000D1A
__end_ofi2_SendLCD             text24       001044
__initialization               cinit        001044
__mediumconst                  mediumconst  000000
__pbssBANK1                    bssBANK1     0001D4
__pbssCOMRAM                   bssCOMRAM    000027
__pcinit                       cinit        001044
__pcstackBANK0                 cstackBANK0  000060
__pcstackBANK1                 cstackBANK1  000100
__pcstackCOMRAM                cstackCOMRAM 000001
__pintcode                     intcode      000008
__psmallconst                  smallconst   000300
__ptext0                       text0        000314
__ptext1                       text1        000D1A
__ptext10                      text10       000BAA
__ptext11                      text11       000EC2
__ptext12                      text12       0005C4
__ptext13                      text13       000F52
__ptext14                      text14       0009D0
__ptext15                      text15       000F18
__ptext16                      text16       000F88
__ptext17                      text17       0008E8
__ptext18                      text18       00108A
__ptext19                      text19       000FBC
__ptext2                       text2        000D88
__ptext20                      text20       000A8E
__ptext21                      text21       0010C6
__ptext23                      text23       000FEC
__ptext24                      text24       00101C
__ptext25                      text25       000CA2
__ptext26                      text26       0010D4
__ptext27                      text27       0010E2
__ptext3                       text3        000798
__ptext4                       text4        000E60
__ptext5                       text5        000C2A
__ptext6                       text6        0010AA
__ptext7                       text7        000DF6
__ptext8                       text8        00106A
__ptext9                       text9        000B2A
__ramtop                       ramtop       000300
__size_of_E_TOG                (abs)        000000
__size_of_InterruptHandlerHigh (abs)        000000
__size_of_LCD_Clear            (abs)        000000
__size_of_LCD_Init             (abs)        000000
__size_of_LCD_String           (abs)        000000
__size_of_LCDout               (abs)        000000
__size_of_SendLCD              (abs)        000000
__size_of_SetLine              (abs)        000000
__size_of___awdiv              (abs)        000000
__size_of___lwdiv              (abs)        000000
__size_of___lwmod              (abs)        000000
__size_of___wmul               (abs)        000000
__size_of_fullSpeedAhead       (abs)        000000
__size_of_fullSpeedBack        (abs)        000000
__size_of_getCharSerial        (abs)        000000
__size_of_initBITS             (abs)        000000
__size_of_initMotor            (abs)        000000
__size_of_initPWM              (abs)        000000
__size_of_main                 (abs)        000000
__size_of_setMotorPWM          (abs)        000000
__size_of_sprintf              (abs)        000000
__size_of_stop                 (abs)        000000
__size_of_turnLeft             (abs)        000000
__size_of_turnRight            (abs)        000000
__size_ofi2_E_TOG              (abs)        000000
__size_ofi2_LCD_String         (abs)        000000
__size_ofi2_LCDout             (abs)        000000
__size_ofi2_SendLCD            (abs)        000000
__smallconst                   smallconst   000300
_buf1                          bssBANK1     0001D5
_dpowers                       smallconst   000301
_fullSpeedAhead                text10       000BAA
_fullSpeedBack                 text9        000B2A
_getCharSerial                 text27       0010E2
_initBITS                      text8        00106A
_initMotor                     text7        000DF6
_initPWM                       text6        0010AA
_main                          text0        000314
_motorL                        bssCOMRAM    000027
_motorR                        bssCOMRAM    000030
_setMotorPWM                   text12       0005C4
_sprintf                       text3        000798
_state                         bssBANK1     0001D4
_stop                          text11       000EC2
_turnLeft                      text2        000D88
_turnRight                     text1        000D1A
btemp                          temp         000039
end_of_initialization          cinit        00105C
fullSpeedAhead@m_L             cstackBANK0  000079
fullSpeedAhead@m_R             cstackBANK0  00007B
fullSpeedBack@m_L              cstackBANK0  000079
fullSpeedBack@m_R              cstackBANK0  00007B
i2LCD_String@string            cstackCOMRAM 000005
i2LCDout@number                cstackCOMRAM 000002
i2SendLCD@Byte                 cstackCOMRAM 000004
i2SendLCD@type                 cstackCOMRAM 000003
i2_E_TOG                       text26       0010D4
i2_LCD_String                  text23       000FEC
i2_LCDout                      text25       000CA2
i2_SendLCD                     text24       00101C
int$flags                      temp         000039
intlevel0                      text         000000
intlevel1                      text         000000
intlevel2                      text         000000
intlevel3                      text         000000
main@CAP1BUF                   cstackBANK1  0001CD
main@FLIP                      cstackBANK1  0001D1
main@LOG                       cstackBANK1  000100
main@counter                   cstackBANK1  0001CA
main@i                         cstackBANK1  0001D2
main@j                         cstackBANK1  0001CB
main@k                         cstackBANK1  0001CF
main@num                       cstackBANK1  0001C8
setMotorPWM@PWMduty            cstackBANK0  000073
setMotorPWM@m                  cstackBANK0  00006E
sprintf@ap                     cstackBANK0  000073
sprintf@c                      cstackBANK0  000078
sprintf@f                      cstackBANK0  00006E
sprintf@flag                   cstackBANK0  000072
sprintf@prec                   cstackBANK0  000077
sprintf@sp                     cstackBANK0  00006C
sprintf@val                    cstackBANK0  000075
stackhi                        (abs)        0002FF
stacklo                        (abs)        0001E5
start                          init         0000E2
start_initialization           cinit        001044
stop@m_L                       cstackBANK0  000075
stop@m_R                       cstackBANK0  000077
turnLeft@m_L                   cstackBANK0  000079
turnLeft@m_R                   cstackBANK0  00007B
turnRight@m_L                  cstackBANK0  000079
turnRight@m_R                  cstackBANK0  00007B


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 20 in file "main_1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               2  203[BANK1 ] int 
  num             2  200[BANK1 ] int 
  counter         1  202[BANK1 ] unsigned char 
  k               2  207[BANK1 ] int 
  LOG           200    0[BANK1 ] int [100]
  buf            16    0        unsigned char [16]
  bufr           12    0        unsigned char [12]
  i               2  210[BANK1 ] int 
  CAP1BUF         2  205[BANK1 ] unsigned int 
  FLIP            1  209[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0     212       0
      Temps:          0       3       0       0
      Totals:         0       3     212       0
Total ram usage:      215 bytes
 Hardware stack levels required when called:    9
 This function calls:
		_LCD_Clear
		_LCD_Init
		_LCD_String
		_SetLine
		_fullSpeedAhead
		_fullSpeedBack
		_initBITS
		_initMotor
		_initPWM
		_sprintf
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 128 in file "source_motor_1.c"
 Parameters:    Size  Location     Type
  m_L             2   25[BANK0 ] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   27[BANK0 ] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setMotorPWM
		_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 100 in file "source_motor_1.c"
 Parameters:    Size  Location     Type
  m_L             2   25[BANK0 ] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   27[BANK0 ] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setMotorPWM
		_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              2   12[BANK0 ] PTR unsigned char 
		 -> buf1(16), 
  f               2   14[BANK0 ] PTR const unsigned char 
		 -> STR_1(8), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  val             2   21[BANK0 ] unsigned int 
  ap              2   19[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  len             2    0        unsigned int 
  c               1   24[BANK0 ] char 
  prec            1   23[BANK0 ] char 
  flag            1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   12[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       6       0       0
      Locals:         0       7       0       0
      Temps:          0       0       0       0
      Totals:         0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  dividend        2    7[BANK0 ] unsigned int 
  divisor         2    9[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    7[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] unsigned int 
  divisor         2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    5[BANK0 ] unsigned int 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _initPWM *****************
 Defined at:
		line 46 in file "source_motor_1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initMotor *****************
 Defined at:
		line 67 in file "source_motor_1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_setMotorPWM
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initBITS *****************
 Defined at:
		line 124 in file "source_LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedBack *****************
 Defined at:
		line 156 in file "source_motor_1.c"
 Parameters:    Size  Location     Type
  m_L             2   25[BANK0 ] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   27[BANK0 ] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setMotorPWM
		_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedAhead *****************
 Defined at:
		line 141 in file "source_motor_1.c"
 Parameters:    Size  Location     Type
  m_L             2   25[BANK0 ] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   27[BANK0 ] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setMotorPWM
		_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 90 in file "source_motor_1.c"
 Parameters:    Size  Location     Type
  m_L             2   21[BANK0 ] PTR struct DC_motor
		 -> motorL(9), 
  m_R             2   23[BANK0 ] PTR struct DC_motor
		 -> motorR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_setMotorPWM
 This function is called by:
		_turnLeft
		_turnRight
		_fullSpeedAhead
		_fullSpeedBack
		_main
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 16 in file "source_motor_1.c"
 Parameters:    Size  Location     Type
  m               2   14[BANK0 ] PTR struct DC_motor
		 -> motorR(9), motorL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   19[BANK0 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       3       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_initMotor
		_stop
		_turnLeft
		_turnRight
		_fullSpeedAhead
		_fullSpeedBack
		_setMotorFullSpeed
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[BANK0 ] unsigned int 
  multiplicand    2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    6[BANK0 ] int 
  divisor         2    8[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2   12[BANK0 ] int 
  sign            1   11[BANK0 ] unsigned char 
  counter         1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _SetLine *****************
 Defined at:
		line 87 in file "source_LCD.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  line            1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_SendLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_String *****************
 Defined at:
		line 100 in file "source_LCD.c"
 Parameters:    Size  Location     Type
  string          2    4[BANK0 ] PTR unsigned char 
		 -> InterruptHandlerHigh@buf(12), buf1(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_SendLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Init *****************
 Defined at:
		line 47 in file "source_LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_LCDout
		_SendLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 112 in file "source_LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_SendLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SendLCD *****************
 Defined at:
		line 39 in file "source_LCD.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCDout
 This function is called by:
		_LCD_Init
		_SetLine
		_LCD_String
		_LCD_Clear
 This function uses a non-reentrant model


 *************** function _LCDout *****************
 Defined at:
		line 27 in file "source_LCD.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_E_TOG
 This function is called by:
		_SendLCD
		_LCD_Init
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 20 in file "source_LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_LCDout
 This function uses a non-reentrant model


 *************** function _InterruptHandlerHigh *****************
 Defined at:
		line 230 in file "main_1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  RFIDa           2   35[COMRAM] int 
  buf            12   21[COMRAM] unsigned char [12]
  num             2   33[COMRAM] int 
  counter         1   37[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:        17       0       0       0
      Temps:         15       0       0       0
      Totals:        32       0       0       0
Total ram usage:       32 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_getCharSerial
		i2_LCD_String
		i2_SendLCD
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function i2_LCD_String *****************
 Defined at:
		line 100 in file "source_LCD.c"
 Parameters:    Size  Location     Type
  string          2    4[COMRAM] PTR unsigned char 
		 -> InterruptHandlerHigh@buf(12), buf1(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_SendLCD
 This function is called by:
		_InterruptHandlerHigh
 This function uses a non-reentrant model


 *************** function i2_SendLCD *****************
 Defined at:
		line 39 in file "source_LCD.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_LCDout
 This function is called by:
		_InterruptHandlerHigh
		i2_LCD_String
 This function uses a non-reentrant model


 *************** function i2_LCDout *****************
 Defined at:
		line 27 in file "source_LCD.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_E_TOG
 This function is called by:
		i2_SendLCD
 This function uses a non-reentrant model


 *************** function i2_E_TOG *****************
 Defined at:
		line 20 in file "source_LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_LCDout
 This function uses a non-reentrant model


 *************** function _getCharSerial *****************
 Defined at:
		line 118 in file "source_LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_InterruptHandlerHigh
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c
		___awdiv       		CODE           	09D0	0000	191

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c estimated size: 191

main_1.c
		_main          		CODE           	0314	0000	689
		_InterruptHandlerHigh		CODE           	0008	0000	219

main_1.c estimated size: 908

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c
		___lwmod       		CODE           	0E60	0000	99

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c estimated size: 99

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c
		_sprintf       		CODE           	0798	0000	337

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c estimated size: 337

source_LCD.c
		_SetLine       		CODE           	0F18	0000	59
		_LCD_String    		CODE           	0F88	0000	53
		_LCD_Init      		CODE           	08E8	0000	233
		_initBITS      		CODE           	106A	0000	33
		_SendLCD       		CODE           	0FBC	0000	49
		_E_TOG         		CODE           	10C6	0000	15
		_LCD_Clear     		CODE           	108A	0000	33
		_LCDout        		CODE           	0A8E	0000	157
		_getCharSerial 		CODE           	10E2	0000	9

source_LCD.c estimated size: 641

shared
		i2_LCDout      		CODE           	0CA2	0000	121
		_dpowers       		SMALLCONST     	0301	0000	11
		i2_LCD_String  		CODE           	0FEC	0000	49
		i2_E_TOG       		CODE           	10D4	0000	15
		__initialization		CODE           	1044	0000	25
		i2_SendLCD     		CODE           	101C	0000	41

shared estimated size: 262

source_motor_1.c
		_fullSpeedBack 		CODE           	0B2A	0000	129
		_fullSpeedAhead		CODE           	0BAA	0000	129
		_turnLeft      		CODE           	0D88	0000	111
		_stop          		CODE           	0EC2	0000	87
		_turnRight     		CODE           	0D1A	0000	111
		_initMotor     		CODE           	0DF6	0000	107
		_setMotorPWM   		CODE           	05C4	0000	469
		_initPWM       		CODE           	10AA	0000	29

source_motor_1.c estimated size: 1172

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c
		___lwdiv       		CODE           	0C2A	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c estimated size: 121

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c
		___wmul        		CODE           	0F52	0000	55

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c estimated size: 55

